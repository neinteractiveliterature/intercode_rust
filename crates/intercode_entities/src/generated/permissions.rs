//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "permissions")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i64,
  pub event_category_id: Option<i64>,
  pub staff_position_id: Option<i64>,
  pub permission: String,
  pub created_at: DateTime,
  pub updated_at: DateTime,
  pub organization_role_id: Option<i64>,
  pub convention_id: Option<i64>,
  pub cms_content_group_id: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::event_categories::Entity",
    from = "Column::EventCategoryId",
    to = "super::event_categories::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  EventCategories,
  #[sea_orm(
    belongs_to = "super::conventions::Entity",
    from = "Column::ConventionId",
    to = "super::conventions::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Conventions,
  #[sea_orm(
    belongs_to = "super::staff_positions::Entity",
    from = "Column::StaffPositionId",
    to = "super::staff_positions::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  StaffPositions,
  #[sea_orm(
    belongs_to = "super::cms_content_groups::Entity",
    from = "Column::CmsContentGroupId",
    to = "super::cms_content_groups::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  CmsContentGroups,
  #[sea_orm(
    belongs_to = "super::organization_roles::Entity",
    from = "Column::OrganizationRoleId",
    to = "super::organization_roles::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  OrganizationRoles,
}

impl Related<super::event_categories::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::EventCategories.def()
  }
}

impl Related<super::conventions::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Conventions.def()
  }
}

impl Related<super::staff_positions::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::StaffPositions.def()
  }
}

impl Related<super::cms_content_groups::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::CmsContentGroups.def()
  }
}

impl Related<super::organization_roles::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::OrganizationRoles.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
