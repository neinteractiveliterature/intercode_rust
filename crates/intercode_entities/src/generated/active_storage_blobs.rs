//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "active_storage_blobs")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i64,
  pub key: String,
  pub filename: String,
  pub content_type: Option<String>,
  #[sea_orm(column_type = "Text", nullable)]
  pub metadata: Option<String>,
  pub service_name: String,
  pub byte_size: i64,
  pub checksum: Option<String>,
  pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::active_storage_attachments::Entity")]
  ActiveStorageAttachments,
  #[sea_orm(has_many = "super::active_storage_variant_records::Entity")]
  ActiveStorageVariantRecords,
}

impl Related<super::active_storage_attachments::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::ActiveStorageAttachments.def()
  }
}

impl Related<super::active_storage_variant_records::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::ActiveStorageVariantRecords.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
