//! SeaORM Entity. Generated by sea-orm-codegen 0.7.0
#![allow(clippy::derive_partial_eq_without_eq)]

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "rooms_runs")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub room_id: i64,
  #[sea_orm(primary_key, auto_increment = false)]
  pub run_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::rooms::Entity",
    from = "Column::RoomId",
    to = "super::rooms::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Rooms,
  #[sea_orm(
    belongs_to = "super::runs::Entity",
    from = "Column::RunId",
    to = "super::runs::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Runs,
}

impl Related<super::rooms::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Rooms.def()
  }
}

impl Related<super::runs::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Runs.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
