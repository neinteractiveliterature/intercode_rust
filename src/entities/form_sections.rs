//! SeaORM Entity. Generated by sea-orm-codegen 0.7.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "form_sections")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i64,
  pub form_id: Option<i64>,
  #[sea_orm(column_type = "Text", nullable)]
  pub title: Option<String>,
  pub position: i32,
  pub created_at: DateTime,
  pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::forms::Entity",
    from = "Column::FormId",
    to = "super::forms::Column::Id",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Forms,
  #[sea_orm(has_many = "super::form_items::Entity")]
  FormItems,
}

impl Related<super::forms::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Forms.def()
  }
}

impl Related<super::form_items::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::FormItems.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
